install(ROCR)
install.packages("ROCR")
library(ROCR)
demo(ROCR)
?ROCR
?performance
output:
output:
installed.packages()
library()
citer
Citer
citer: Search
library(gRain)
grain
grain()
head(spam)
data(spam)
library(caret)
data(spam)
library(kernlab)
data(spam)
head(spam)
install.packages("AppliedPredictiveModeling")
libray(AppliedPredictiveModeling)
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
data(AlzheimerDisease)
head(predictors)
head(diagnosis)
data(concrete)
head(concrete)
head(mixtures)
set.seed(975)
inTrain=createDataPartition(mixtures$compressiveStrenght, p = 3/4)[[1]]
inTrain=createDataPartition(mixtures$compressiveStrenght, p = 3/4)[[1]]
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[inTrain]
training = mixtures[inTrain,]
testing=mixtures[-inTrain,]
head(training)
plot(training,training$compressiveStrenght)
